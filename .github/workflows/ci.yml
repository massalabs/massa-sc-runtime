name: CI

on:
  push:
    branches: [ main, staging, trying ]
  pull_request:
    branches: [ main, 'next_breaking_update' ]
  merge_group:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  # Quick tests on each commit/PR
  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          components: rustfmt
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  check:
    if: github.ref != 'refs/heads/staging'
    needs: sanity
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          command: check

  clippy:
    if: github.ref != 'refs/heads/staging'
    needs: check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: arduino/setup-protoc@v3
        with:
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -A clippy::uninlined-format-args

  # Full cross-platform tests required to merge on main branch
  full:
    # if: github.ref == 'refs/heads/staging'
    name: full
    needs: sanity
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: arduino/setup-protoc@v3
        with:
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
      - uses: actions-rs/cargo@v1
        with:
          command: test
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features gas_calibration

  build: # quick hack because bors wrongly detect matrix jobs status. Note: May not be needed anymore with GitHub Merge Queues.
    # if: github.ref == 'refs/heads/staging'
    needs: full
    runs-on: ubuntu-latest
    steps:
      - run: exit 0

  # Code documentation and coverage will be run only on main branch
  coverage:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: arduino/setup-protoc@v3
        with:
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          command: clean
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features gas_calibration,testing,dumper --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      - id: coverage
        uses: actions-rs/grcov@v0.1
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}

  doc:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          components: rustfmt
          override: true
      - uses: arduino/setup-protoc@v3
        with:
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps
      - uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: target/doc

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: setup_tests
        shell: bash
        run: |
          cargo install rust-script && rust-script tools/setup_test.rs && git diff --no-ext-diff --quiet
        