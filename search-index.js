var searchIndex = new Map(JSON.parse('[\
["massa_sc_runtime",{"t":"PPGFPPPPPFPPKKGPPFIGPPPGPNNNNNMMMNNQQMNNNNNNNNNNNNNNMMMMMMMMMMMMONNNNNMNNNNNNNNNNMMMMNMMNMMMMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMMNNMMMMMNNMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNMMONNNNNNNMNNNNNNNOOOOOOOOOOOOOOOOMMNNMNNNNNNNMMMMMMMMMMMMMOOHHMMMMNMNNMMNOMNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMOO","n":["ASModule","CL","Compiler","CondomLimits","DepthError","DepthError","Err","ExecutionError","GasCalibrationError","GasCosts","GenericError","InstanceError","Interface","InterfaceClone","InterfaceError","IoError","Ok","Response","Result","RuntimeModule","SP","SerdeError","Utf8Error","VMError","WasmV1Module","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_native_amount_wasmv1","address_from_public_key","append_ds_value_wasmv1","as_error","as_error","bail","bail","base58_check_to_bytes_wasmv1","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_to_base58_check_wasmv1","caller_has_write_access","chain_id","check_address_wasmv1","check_native_amount_wasmv1","check_pubkey_wasmv1","check_signature_wasmv1","checked_add_native_time_wasmv1","checked_div_native_time_wasmv1","checked_mul_native_time_wasmv1","checked_scalar_div_native_time_wasmv1","checked_sub_native_time_wasmv1","cl_compilation_cost","clone","clone","clone","clone","clone","clone_box","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compare_address_wasmv1","compare_native_amount_wasmv1","compare_native_time_wasmv1","compare_pub_key_wasmv1","compiler","create_module","decrement_recursion_counter","default","deferred_call_cancel","deferred_call_exists","deferred_call_register","delete_ds_entry_wasmv1","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div_rem_native_amount_wasmv1","drop","drop","drop","drop","drop","drop","drop","ds_entry_exists_wasmv1","evm_get_address_from_pubkey","evm_get_pubkey_from_signature","evm_signature_verify","finish_call","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_event","generate_event_wasmv1","get_address_category_wasmv1","get_address_version_wasmv1","get_balance","get_balance_for","get_balance_wasmv1","get_bytecode_wasmv1","get_call_coins","get_call_coins","get_call_coins_wasmv1","get_call_stack","get_current_period","get_current_slot","get_current_thread","get_data","get_data_for","get_deferred_call_quote","get_ds_keys_wasmv1","get_ds_value_wasmv1","get_interface_version","get_keys","get_keys_for","get_module","get_op_data","get_op_keys","get_op_keys_wasmv1","get_origin_operation_id","get_owned_addresses","get_pubkey_version_wasmv1","get_signature_version_wasmv1","get_time","get_tmp_module","has_data","has_data_for","hash","hash_blake3","hash_keccak256","hash_sha256","increment_recursion_counter","init","init","init","init","init","init","init","init_call","init_call_wasmv1","init_gas_cost","into","into","into","into","into","into","into","is_address_eoa","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","max_custom_sections_data_len","max_custom_sections_len","max_exports","max_function_names_len","max_functions","max_global_initializers_len","max_globals_len","max_imports_len","max_instance_cost","max_memories_len","max_name_len","max_passive_data_len","max_passive_elements_len","max_signature_len","max_table_initializers_len","max_tables_count","native_amount_from_str_wasmv1","native_amount_to_string_wasmv1","new","new","op_entry_exists","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","print","raw_append_data","raw_append_data_for","raw_delete_data","raw_delete_data_for","raw_get_bytecode","raw_get_bytecode_for","raw_get_data","raw_get_data_for","raw_set_bytecode","raw_set_bytecode_for","raw_set_data","raw_set_data_for","remaining_gas","ret","run_function","run_main","save_gas_remaining_before_subexecution","scalar_div_rem_native_amount_wasmv1","scalar_mul_native_amount_wasmv1","send_message","serialize","set_bytecode_wasmv1","set_data","set_data_for","set_ds_value_wasmv1","signature_verify","source","sp_compilation_cost","sub_native_amount_wasmv1","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transfer_coins","transfer_coins_for","transfer_coins_wasmv1","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_random","unsafe_random_f64","unsafe_random_wasmv1","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","validate_address","error","init_gas_cost"],"q":[[0,"massa_sc_runtime"],[330,"massa_sc_runtime::VMError"],[332,"dyn_clone::sealed"],[333,"massa_sc_runtime::types"],[334,"massa_proto_rs::massa::model::v1"],[335,"alloc::string"],[336,"core::option"],[337,"core::error"],[338,"alloc::vec"],[339,"massa_sc_runtime::error"],[340,"massa_sc_runtime::execution"],[341,"alloc::boxed"],[342,"rkyv::with"],[343,"core::result"],[344,"anyhow"],[345,"core::fmt"],[346,"wasmer::errors"],[347,"wasmer::exports"],[348,"serde_json::error"],[349,"std::io::error"],[350,"core::str::error"],[351,"serde::de"],[352,"alloc::collections::btree::set"],[353,"core::alloc::layout"],[354,"std::path"],[355,"serde::ser"],[356,"core::any"]],"i":[21,20,0,0,19,33,6,19,33,0,33,19,0,0,0,33,6,0,0,0,20,33,33,0,21,19,20,21,22,23,4,4,4,19,33,0,0,4,19,20,21,33,34,22,23,19,20,21,33,34,22,23,4,4,4,4,4,4,4,4,4,4,4,4,23,19,20,21,22,23,24,19,20,21,22,23,19,20,21,22,23,4,4,4,4,21,4,4,22,4,4,4,4,19,20,21,33,34,22,23,19,20,21,33,34,22,23,19,20,21,21,33,34,22,23,4,19,20,21,33,34,22,23,4,4,4,4,4,19,19,33,33,34,22,23,19,19,19,19,19,20,21,33,33,33,33,33,33,34,22,23,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,19,20,21,33,34,22,23,4,4,34,19,20,21,33,34,22,23,4,19,20,21,33,34,22,23,22,22,22,22,22,22,22,22,23,22,22,22,22,22,22,22,4,4,21,23,4,19,20,21,33,34,22,23,4,4,4,4,4,4,4,4,4,4,4,4,4,34,34,0,0,4,4,4,4,21,4,4,4,4,4,33,23,4,19,20,21,22,23,19,33,4,4,4,19,20,21,33,34,22,23,19,20,21,33,34,22,23,19,20,21,33,34,22,23,4,4,4,19,20,21,33,34,22,23,19,20,21,33,34,22,23,19,20,21,33,34,22,23,4,56,56],"f":"`````````````````````````{{{b{c}}d}f{}}0000{{{b{h}}{b{j}}{b{j}}}{{l{j}}}}{{{b{h}}{b{n}}}{{l{A`}}}}{{{b{h}}{b{{Ad{Ab}}}}{b{{Ad{Ab}}}}{Af{A`}}}{{l{f}}}}{{{b{c}}}{{b{Ah}}}{}}0``{{{b{h}}{b{n}}}{{l{{Aj{Ab}}}}}}{{{b{c}}}{{b{e}}}{}{}}000000{{{b{Alc}}}{{b{Ale}}}{}{}}000000{{{b{h}}{b{{Ad{Ab}}}}}A`}{{{b{h}}}{{l{An}}}}{{{b{h}}}{{l{B`}}}}{{{b{h}}{b{n}}}{{l{An}}}}{{{b{h}}{b{j}}}{{l{An}}}}11{{{b{h}}{b{Bb}}{b{Bb}}}{{l{Bb}}}}{{{b{h}}{b{Bb}}{b{Bb}}}{{l{{Bd{B`Bb}}}}}}{{{b{h}}{b{Bb}}B`}{{l{Bb}}}}{{{b{h}}{b{Bb}}B`}{{l{{Bd{BbBb}}}}}}3`{{{b{Bf}}}Bf}{{{b{Bh}}}Bh}{{{b{Bj}}}Bj}{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{{b{C`}}}{{Cb{h}}}}{{{b{c}}{b{Ale}}}f{}{}}0000{{{b{c}}}f{}}0000{{{b{h}}{b{n}}{b{n}}}{{l{Cd}}}}{{{b{h}}{b{j}}{b{j}}}{{l{Cd}}}}{{{b{h}}{b{Bb}}{b{Bb}}}{{l{Cd}}}}2{{{b{Bj}}}Bh}{{{b{h}}{b{{Ad{Ab}}}}}{{l{A`}}}}{{{b{h}}}{{l{f}}}}{{}Bl}{{{b{h}}{b{n}}}{{l{f}}}}{{{b{h}}{b{n}}}{{l{An}}}}{{{b{h}}{b{n}}{b{n}}{Bd{B`Ab}}B`{b{{Ad{Ab}}}}B`}{{l{A`}}}}{{{b{h}}{b{{Ad{Ab}}}}{Af{A`}}}{{l{f}}}}{Cf{{b{c}}}{}}000000{Cf{{b{Alc}}}{}}000000{{{b{c}}{b{Ale}}}{{Cj{{Ch{gi}}}}}{}{}{}{}}00{{{b{{Ad{Ab}}}}B`BnBl}{{Cl{Bj}}}}1111{{{b{h}}{b{j}}{b{j}}}{{l{{Bd{B`j}}}}}}{Cff}000000{{{b{h}}{b{{Ad{Ab}}}}{Af{A`}}}{{l{An}}}}{{{b{h}}{b{{Ad{Ab}}}}}{{l{{Aj{Ab}}}}}}{{{b{h}}{b{{Ad{Ab}}}}{b{{Ad{Ab}}}}}{{l{{Aj{Ab}}}}}}{{{b{h}}{b{{Ad{Ab}}}}{b{{Ad{Ab}}}}{b{{Ad{Ab}}}}}{{l{An}}}}?{{{b{Bf}}{b{AlCn}}}D`}0{{{b{Db}}{b{AlCn}}}D`}0{{{b{Dd}}{b{AlCn}}}D`}{{{b{Bl}}{b{AlCn}}}D`}{{{b{Bn}}{b{AlCn}}}D`}{DfBf}{DhBf}{cc{}}{DjBf}{DlBf}22{{{b{n}}}Db}{DnDb}{E`Db}{EbDb}6{A`Db}777{{{b{h}}A`}{{l{f}}}}{{{b{h}}{Aj{Ab}}}{{l{f}}}}{{{b{h}}{b{n}}}{{l{Ed}}}}{{{b{h}}{b{n}}}{{l{B`}}}}{{{b{h}}}{{l{B`}}}}1{{{b{h}}{Af{A`}}}{{l{j}}}}{{{b{h}}{Af{A`}}}{{l{{Aj{Ab}}}}}}22{{{b{h}}}{{l{j}}}}{{{b{h}}}{{l{{Aj{A`}}}}}}4{{{b{h}}}{{l{Ef}}}}{{{b{h}}}{{l{Ab}}}}{{{b{h}}{b{{Ad{Ab}}}}}{{l{c}}}Eh}{{{b{h}}{b{n}}{b{{Ad{Ab}}}}}{{l{c}}}Eh}{{{b{h}}{Bd{B`Ab}}B`B`}{{l{{Bd{AnB`}}}}}}{{{b{h}}{b{{Ad{Ab}}}}{Af{A`}}}{{l{{Ej{{Aj{Ab}}}}}}}}{{{b{h}}{b{{Ad{Ab}}}}{Af{A`}}}{{l{{Aj{Ab}}}}}}{{{b{h}}}{{l{El}}}}{{{b{h}}{Af{{b{{Ad{Ab}}}}}}}{{l{{Ej{{Aj{Ab}}}}}}}}{{{b{h}}{b{n}}{Af{{b{{Ad{Ab}}}}}}}{{l{{Ej{{Aj{Ab}}}}}}}}{{{b{h}}{b{{Ad{Ab}}}}B`}{{l{Bj}}}}{{{b{h}}{b{{Ad{Ab}}}}}{{l{{Aj{Ab}}}}}}{{{b{h}}{Af{{b{{Ad{Ab}}}}}}}{{l{{Aj{{Aj{Ab}}}}}}}}{{{b{h}}{b{{Ad{Ab}}}}}{{l{{Aj{{Aj{Ab}}}}}}}}{{{b{h}}}{{l{{Af{A`}}}}}}?{{{b{h}}{b{n}}}{{l{B`}}}}0{{{b{h}}}{{l{B`}}}}6{{{b{h}}{b{{Ad{Ab}}}}}{{l{An}}}}{{{b{h}}{b{n}}{b{{Ad{Ab}}}}}{{l{An}}}}{{{b{h}}{b{{Ad{Ab}}}}}{{l{{En{Ab}}}}}}000{{{b{h}}}{{l{f}}}}{{}Cf}000000{{{b{h}}{b{n}}B`}{{l{{Aj{Ab}}}}}}{{{b{h}}{b{n}}j}{{l{{Aj{Ab}}}}}}`{ce{}{}}000000{{{b{h}}{b{n}}}{{l{An}}}}{{}{{Cj{F`Fb}}}}000000````````````````{{{b{h}}{b{n}}}{{l{j}}}}{{{b{h}}{b{j}}}{{l{A`}}}}{{{b{{Ad{Ab}}}}BnBhBl}{{Cl{Bj}}}}{Fd{{l{Bn}}}}={b}000000{{{b{h}}{b{n}}}{{l{f}}}}{{{b{h}}{b{{Ad{Ab}}}}{b{{Ad{Ab}}}}}{{l{f}}}}{{{b{h}}{b{n}}{b{{Ad{Ab}}}}{b{{Ad{Ab}}}}}{{l{f}}}}{{{b{h}}{b{{Ad{Ab}}}}}{{l{f}}}}{{{b{h}}{b{n}}{b{{Ad{Ab}}}}}{{l{f}}}}{{{b{h}}}{{l{{Aj{Ab}}}}}}{{{b{h}}{b{n}}}{{l{{Aj{Ab}}}}}}{{{b{h}}{b{{Ad{Ab}}}}}{{l{{Aj{Ab}}}}}}{{{b{h}}{b{n}}{b{{Ad{Ab}}}}}{{l{{Aj{Ab}}}}}}5476``{{{b{h}}Bj{b{n}}{b{{Ad{Ab}}}}B`BnBl}{{Cj{DdBf}}}}{{{b{h}}BjB`BnBl}{{Cj{DdBf}}}}{{{b{h}}B`}f}{{{b{h}}{b{j}}B`}{{l{{Bd{jj}}}}}}{{{b{h}}{b{j}}B`}{{l{j}}}}{{{b{h}}{b{n}}{b{n}}{Bd{B`Ab}}{Bd{B`Ab}}B`B`B`{b{{Ad{Ab}}}}{Af{{Bd{{b{n}}{Af{{b{{Ad{Ab}}}}}}}}}}}{{l{f}}}}{{{b{Bj}}}{{Cl{{Aj{Ab}}}}}}{{{b{h}}{b{{Ad{Ab}}}}{Af{A`}}}{{l{f}}}}{{{b{h}}{b{{Ad{Ab}}}}{b{c}}}{{l{f}}}Ff}{{{b{h}}{b{n}}{b{{Ad{Ab}}}}{b{c}}}{{l{f}}}Ff}{{{b{h}}{b{{Ad{Ab}}}}{b{{Ad{Ab}}}}{Af{A`}}}{{l{f}}}}{{{b{h}}{b{{Ad{Ab}}}}{b{n}}{b{n}}}{{l{An}}}}{{{b{Db}}}{{Af{{b{Ah}}}}}}`{{{b{h}}{b{j}}{b{j}}}{{l{j}}}}{{{b{c}}}e{}{}}0000{{{b{c}}}A`{}}0{{{b{h}}{b{n}}B`}{{l{f}}}}{{{b{h}}{b{n}}{b{n}}B`}{{l{f}}}}{{{b{h}}A`j{Af{A`}}}{{l{f}}}}{c{{Cj{e}}}{}{}}0000000000000{{{b{c}}}Fh{}}000000{{{b{h}}}{{l{Fj}}}}{{{b{h}}}{{l{Fl}}}}{{{b{h}}B`}{{l{{Aj{Ab}}}}}}{{{Cb{c}}}{{Cb{Fn}}}{}}000000{{{b{Alc}}}{{b{AlFn}}}{}}000000{{{b{c}}}{{b{Fn}}}{}}000000{{{b{h}}{b{n}}}{{l{An}}}}``","D":"Kf","p":[[1,"reference"],[5,"Private",332],[1,"unit"],[10,"Interface",0,333],[5,"NativeAmount",334],[8,"Result",0,333],[1,"str"],[5,"String",335],[1,"u8"],[1,"slice"],[6,"Option",336],[10,"Error",337],[5,"Vec",338],[0,"mut"],[1,"bool"],[1,"u64"],[5,"NativeTime",334],[1,"tuple"],[6,"VMError",0,339],[6,"Compiler",0,340],[6,"RuntimeModule",0,340],[5,"CondomLimits",0,333],[5,"GasCosts",0,333],[10,"InterfaceClone",0,333],[5,"Box",341],[6,"ComparisonResult",334],[1,"usize"],[5,"With",342],[6,"Result",343],[8,"Result",344],[5,"Formatter",345],[8,"Result",345],[6,"InterfaceError",0,333],[5,"Response",0,333],[6,"InstantiationError",346],[6,"ExportError",347],[5,"Error",344],[5,"RuntimeError",346],[5,"Error",348],[5,"Error",349],[5,"Utf8Error",350],[6,"AddressCategory",334],[5,"Slot",334],[10,"DeserializeOwned",351],[5,"BTreeSet",352],[1,"u32"],[1,"array"],[5,"Layout",353],[5,"LayoutError",353],[5,"PathBuf",354],[10,"Serialize",355],[5,"TypeId",356],[1,"i64"],[1,"f64"],[10,"Any",356],[15,"ExecutionError",330]],"r":[[2,340],[3,333],[9,333],[12,333],[13,333],[14,333],[17,333],[18,333],[19,340],[23,339],[259,340],[260,340]],"b":[[128,"impl-Display-for-VMError"],[129,"impl-Debug-for-VMError"],[130,"impl-Display-for-InterfaceError"],[131,"impl-Debug-for-InterfaceError"],[135,"impl-From%3CInstantiationError%3E-for-VMError"],[136,"impl-From%3CExportError%3E-for-VMError"],[138,"impl-From%3CError%3E-for-VMError"],[139,"impl-From%3CRuntimeError%3E-for-VMError"],[142,"impl-From%3C%26str%3E-for-InterfaceError"],[143,"impl-From%3CError%3E-for-InterfaceError"],[144,"impl-From%3CError%3E-for-InterfaceError"],[145,"impl-From%3CUtf8Error%3E-for-InterfaceError"],[147,"impl-From%3CString%3E-for-InterfaceError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPEAHQAAAAIABAAAAAoAAAANAAIAEwACABgABwAhABQANwAeAFgAFgBwAAwAgQAIAIsAAQCPAAMAlAAAAJoAAQCeAAEApwAFALIAAQC1AAEAvQAJANIAGADsAAAA7gAGAAYBAgALAQMAEAEJABwBFQA1ARQASwEBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
